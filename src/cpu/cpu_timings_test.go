/**
 * Created with IntelliJ IDEA.
 * User: danielharper
 * Date: 02/04/2013
 * Time: 22:10
 * To change this template use File | Settings | File Templates.
 */
package cpu

import (
	"cartridge"
	"log"
	"testing"
	"types"
	"utils"
)

var c *GbcCPU

func before() {
	c = NewCPU()
	c.LinkMMU(NewMockMMU())
}

func AssertTimings(c *GbcCPU, t *testing.T, instr byte, expectedTiming int64, isCB bool) {
	tick := c.Step()

	if isCB {
		log.Println("0xCB " + utils.ByteToString(instr) + " (" + c.CurrentInstruction.Description + ")", "testing that instruction runs for", expectedTiming, "cycles")
	} else {
		log.Println(utils.ByteToString(instr) + " (" + c.CurrentInstruction.Description + ")", "testing that instruction runs for", expectedTiming, "cycles")
	}

	if tick != expectedTiming {
		t.Log("-----> For instruction 0xCB", utils.ByteToString(instr)+" ("+c.CurrentInstruction.Description+")", "Expected", expectedTiming, "but got", tick)
		t.FailNow()
	}
}

func RunCBInstrAndAssertTimings(instr byte, expectedTiming int64, flags []int, t *testing.T) {
	before()
	expectedTiming += 4 //+4 because CB adds another cycle
	c.PC = 0x0000
	c.WriteByte(c.PC, 0xCB)
	c.WriteByte(c.PC+1, instr)
	AssertTimings(c, t, instr, expectedTiming, true)
}

func RunInstrAndAssertTimings(instr byte, expectedTiming int64, flags []int, t *testing.T) {
	before()
	if flags != nil {
		for _, f := range flags {
			if f == Z {
				c.SetFlag(Z)
			}
			if f == C {
				c.SetFlag(C)
			}
			if f == N {
				c.SetFlag(N)
			}
			if f == H {
				c.SetFlag(H)
			}
		}
	} else {
		c.ResetFlag(Z)
		c.ResetFlag(H)
		c.ResetFlag(N)
		c.ResetFlag(C)
		c.R.F = 0x00;
	}
	c.PC = 0x0000
	c.WriteByte(c.PC, instr)
	AssertTimings(c, t, instr, expectedTiming, false)
}

func TestTest(t *testing.T) {
	RunInstrAndAssertTimings(0x00, 4, nil, t)
	RunInstrAndAssertTimings(0x01, 12, nil, t)
	RunInstrAndAssertTimings(0x02, 8, nil, t)
	RunInstrAndAssertTimings(0x03, 8, nil, t)
	RunInstrAndAssertTimings(0x04, 4, nil, t)
	RunInstrAndAssertTimings(0x05, 4, nil, t)
	RunInstrAndAssertTimings(0x06, 8, nil, t)
	RunInstrAndAssertTimings(0x07, 4, nil, t)
	RunInstrAndAssertTimings(0x08, 20, nil, t)
	RunInstrAndAssertTimings(0x09, 8, nil, t)
	RunInstrAndAssertTimings(0x0A, 8, nil, t)
	RunInstrAndAssertTimings(0x0B, 8, nil, t)
	RunInstrAndAssertTimings(0x0C, 4, nil, t)
	RunInstrAndAssertTimings(0x0D, 4, nil, t)
	RunInstrAndAssertTimings(0x0E, 8, nil, t)
	RunInstrAndAssertTimings(0x0F, 4, nil, t)

	//0x1x
	RunInstrAndAssertTimings(0x10, 4, nil, t)
	RunInstrAndAssertTimings(0x11, 12, nil, t)
	RunInstrAndAssertTimings(0x12, 8, nil, t)
	RunInstrAndAssertTimings(0x13, 8, nil, t)
	RunInstrAndAssertTimings(0x14, 4, nil, t)
	RunInstrAndAssertTimings(0x15, 4, nil, t)
	RunInstrAndAssertTimings(0x16, 8, nil, t)
	RunInstrAndAssertTimings(0x17, 4, nil, t)
	RunInstrAndAssertTimings(0x18, 12, nil, t)
	RunInstrAndAssertTimings(0x19, 8, nil, t)
	RunInstrAndAssertTimings(0x1A, 8, nil, t)
	RunInstrAndAssertTimings(0x1B, 8, nil, t)
	RunInstrAndAssertTimings(0x1C, 4, nil, t)
	RunInstrAndAssertTimings(0x1D, 4, nil, t)
	RunInstrAndAssertTimings(0x1E, 8, nil, t)
	RunInstrAndAssertTimings(0x1F, 4, nil, t)

	//0x2x
	//this is a 12/8 instruction when NZ
	RunInstrAndAssertTimings(0x20, 12, nil, t)
	RunInstrAndAssertTimings(0x20, 8, []int{Z}, t)
	RunInstrAndAssertTimings(0x21, 12, nil, t)
	RunInstrAndAssertTimings(0x22, 8, nil, t)
	RunInstrAndAssertTimings(0x23, 8, nil, t)
	RunInstrAndAssertTimings(0x24, 4, nil, t)
	RunInstrAndAssertTimings(0x25, 4, nil, t)
	RunInstrAndAssertTimings(0x26, 8, nil, t)
	RunInstrAndAssertTimings(0x27, 4, nil, t)
	//this is a 12/8 instruction when Z
	RunInstrAndAssertTimings(0x28, 12, []int{Z}, t)
	RunInstrAndAssertTimings(0x28, 8, nil, t)
	RunInstrAndAssertTimings(0x29, 8, nil, t)
	RunInstrAndAssertTimings(0x2A, 8, nil, t)
	RunInstrAndAssertTimings(0x2B, 8, nil, t)
	RunInstrAndAssertTimings(0x2C, 4, nil, t)
	RunInstrAndAssertTimings(0x2D, 4, nil, t)
	RunInstrAndAssertTimings(0x2E, 8, nil, t)
	RunInstrAndAssertTimings(0x2F, 4, nil, t)

	//0x3x
	//this is a 12/8 instruction when NC
	RunInstrAndAssertTimings(0x30, 12, nil, t)
	RunInstrAndAssertTimings(0x30, 8, []int{C}, t)
	RunInstrAndAssertTimings(0x31, 12, nil, t)
	RunInstrAndAssertTimings(0x32, 8, nil, t)
	RunInstrAndAssertTimings(0x33, 8, nil, t)
	RunInstrAndAssertTimings(0x34, 12, nil, t)
	RunInstrAndAssertTimings(0x35, 12, nil, t)
	RunInstrAndAssertTimings(0x36, 12, nil, t)
	RunInstrAndAssertTimings(0x37, 4, nil, t)
	//this is a 12/8 instruction when C
	RunInstrAndAssertTimings(0x38, 12, []int{C}, t)
	RunInstrAndAssertTimings(0x38, 8, nil, t)
	RunInstrAndAssertTimings(0x39, 8, nil, t)
	RunInstrAndAssertTimings(0x3A, 8, nil, t)
	RunInstrAndAssertTimings(0x3B, 8, nil, t)
	RunInstrAndAssertTimings(0x3C, 4, nil, t)
	RunInstrAndAssertTimings(0x3D, 4, nil, t)
	RunInstrAndAssertTimings(0x3E, 8, nil, t)
	RunInstrAndAssertTimings(0x3F, 4, nil, t)

	//0x4x
	RunInstrAndAssertTimings(0x40, 4, nil, t)
	RunInstrAndAssertTimings(0x41, 4, nil, t)
	RunInstrAndAssertTimings(0x42, 4, nil, t)
	RunInstrAndAssertTimings(0x43, 4, nil, t)
	RunInstrAndAssertTimings(0x44, 4, nil, t)
	RunInstrAndAssertTimings(0x45, 4, nil, t)
	RunInstrAndAssertTimings(0x46, 8, nil, t)
	RunInstrAndAssertTimings(0x47, 4, nil, t)
	RunInstrAndAssertTimings(0x48, 4, nil, t)
	RunInstrAndAssertTimings(0x49, 4, nil, t)
	RunInstrAndAssertTimings(0x4A, 4, nil, t)
	RunInstrAndAssertTimings(0x4B, 4, nil, t)
	RunInstrAndAssertTimings(0x4C, 4, nil, t)
	RunInstrAndAssertTimings(0x4D, 4, nil, t)
	RunInstrAndAssertTimings(0x4E, 8, nil, t)
	RunInstrAndAssertTimings(0x4F, 4, nil, t)

	//0x5x
	RunInstrAndAssertTimings(0x50, 4, nil, t)
	RunInstrAndAssertTimings(0x51, 4, nil, t)
	RunInstrAndAssertTimings(0x52, 4, nil, t)
	RunInstrAndAssertTimings(0x53, 4, nil, t)
	RunInstrAndAssertTimings(0x54, 4, nil, t)
	RunInstrAndAssertTimings(0x55, 4, nil, t)
	RunInstrAndAssertTimings(0x56, 8, nil, t)
	RunInstrAndAssertTimings(0x57, 4, nil, t)
	RunInstrAndAssertTimings(0x58, 4, nil, t)
	RunInstrAndAssertTimings(0x59, 4, nil, t)
	RunInstrAndAssertTimings(0x5A, 4, nil, t)
	RunInstrAndAssertTimings(0x5B, 4, nil, t)
	RunInstrAndAssertTimings(0x5C, 4, nil, t)
	RunInstrAndAssertTimings(0x5D, 4, nil, t)
	RunInstrAndAssertTimings(0x5E, 8, nil, t)
	RunInstrAndAssertTimings(0x5F, 4, nil, t)

	//0x6x
	RunInstrAndAssertTimings(0x60, 4, nil, t)
	RunInstrAndAssertTimings(0x61, 4, nil, t)
	RunInstrAndAssertTimings(0x62, 4, nil, t)
	RunInstrAndAssertTimings(0x63, 4, nil, t)
	RunInstrAndAssertTimings(0x64, 4, nil, t)
	RunInstrAndAssertTimings(0x65, 4, nil, t)
	RunInstrAndAssertTimings(0x66, 8, nil, t)
	RunInstrAndAssertTimings(0x67, 4, nil, t)
	RunInstrAndAssertTimings(0x68, 4, nil, t)
	RunInstrAndAssertTimings(0x69, 4, nil, t)
	RunInstrAndAssertTimings(0x6A, 4, nil, t)
	RunInstrAndAssertTimings(0x6B, 4, nil, t)
	RunInstrAndAssertTimings(0x6C, 4, nil, t)
	RunInstrAndAssertTimings(0x6D, 4, nil, t)
	RunInstrAndAssertTimings(0x6E, 8, nil, t)
	RunInstrAndAssertTimings(0x6F, 4, nil, t)

	//0x7x
	RunInstrAndAssertTimings(0x70, 8, nil, t)
	RunInstrAndAssertTimings(0x71, 8, nil, t)
	RunInstrAndAssertTimings(0x72, 8, nil, t)
	RunInstrAndAssertTimings(0x73, 8, nil, t)
	RunInstrAndAssertTimings(0x74, 8, nil, t)
	RunInstrAndAssertTimings(0x75, 8, nil, t)
	RunInstrAndAssertTimings(0x76, 4, nil, t)
	RunInstrAndAssertTimings(0x77, 8, nil, t)
	RunInstrAndAssertTimings(0x78, 4, nil, t)
	RunInstrAndAssertTimings(0x79, 4, nil, t)
	RunInstrAndAssertTimings(0x7A, 4, nil, t)
	RunInstrAndAssertTimings(0x7B, 4, nil, t)
	RunInstrAndAssertTimings(0x7C, 4, nil, t)
	RunInstrAndAssertTimings(0x7D, 4, nil, t)
	RunInstrAndAssertTimings(0x7E, 8, nil, t)
	RunInstrAndAssertTimings(0x7F, 4, nil, t)

	//0x8x
	RunInstrAndAssertTimings(0x80, 4, nil, t)
	RunInstrAndAssertTimings(0x81, 4, nil, t)
	RunInstrAndAssertTimings(0x82, 4, nil, t)
	RunInstrAndAssertTimings(0x83, 4, nil, t)
	RunInstrAndAssertTimings(0x84, 4, nil, t)
	RunInstrAndAssertTimings(0x85, 4, nil, t)
	RunInstrAndAssertTimings(0x86, 8, nil, t)
	RunInstrAndAssertTimings(0x87, 4, nil, t)
	RunInstrAndAssertTimings(0x88, 4, nil, t)
	RunInstrAndAssertTimings(0x89, 4, nil, t)
	RunInstrAndAssertTimings(0x8A, 4, nil, t)
	RunInstrAndAssertTimings(0x8B, 4, nil, t)
	RunInstrAndAssertTimings(0x8C, 4, nil, t)
	RunInstrAndAssertTimings(0x8D, 4, nil, t)
	RunInstrAndAssertTimings(0x8E, 8, nil, t)
	RunInstrAndAssertTimings(0x8F, 4, nil, t)

	//0x9x
	RunInstrAndAssertTimings(0x90, 4, nil, t)
	RunInstrAndAssertTimings(0x91, 4, nil, t)
	RunInstrAndAssertTimings(0x92, 4, nil, t)
	RunInstrAndAssertTimings(0x93, 4, nil, t)
	RunInstrAndAssertTimings(0x94, 4, nil, t)
	RunInstrAndAssertTimings(0x95, 4, nil, t)
	RunInstrAndAssertTimings(0x96, 8, nil, t)
	RunInstrAndAssertTimings(0x97, 4, nil, t)
	RunInstrAndAssertTimings(0x98, 4, nil, t)
	RunInstrAndAssertTimings(0x99, 4, nil, t)
	RunInstrAndAssertTimings(0x9A, 4, nil, t)
	RunInstrAndAssertTimings(0x9B, 4, nil, t)
	RunInstrAndAssertTimings(0x9C, 4, nil, t)
	RunInstrAndAssertTimings(0x9D, 4, nil, t)
	RunInstrAndAssertTimings(0x9E, 8, nil, t)
	RunInstrAndAssertTimings(0x9F, 4, nil, t)

	//0xAx
	RunInstrAndAssertTimings(0xA0, 4, nil, t)
	RunInstrAndAssertTimings(0xA1, 4, nil, t)
	RunInstrAndAssertTimings(0xA2, 4, nil, t)
	RunInstrAndAssertTimings(0xA3, 4, nil, t)
	RunInstrAndAssertTimings(0xA4, 4, nil, t)
	RunInstrAndAssertTimings(0xA5, 4, nil, t)
	RunInstrAndAssertTimings(0xA6, 8, nil, t)
	RunInstrAndAssertTimings(0xA7, 4, nil, t)
	RunInstrAndAssertTimings(0xA8, 4, nil, t)
	RunInstrAndAssertTimings(0xA9, 4, nil, t)
	RunInstrAndAssertTimings(0xAA, 4, nil, t)
	RunInstrAndAssertTimings(0xAB, 4, nil, t)
	RunInstrAndAssertTimings(0xAC, 4, nil, t)
	RunInstrAndAssertTimings(0xAD, 4, nil, t)
	RunInstrAndAssertTimings(0xAE, 8, nil, t)
	RunInstrAndAssertTimings(0xAF, 4, nil, t)

	//0xBx
	RunInstrAndAssertTimings(0xB0, 4, nil, t)
	RunInstrAndAssertTimings(0xB1, 4, nil, t)
	RunInstrAndAssertTimings(0xB2, 4, nil, t)
	RunInstrAndAssertTimings(0xB3, 4, nil, t)
	RunInstrAndAssertTimings(0xB4, 4, nil, t)
	RunInstrAndAssertTimings(0xB5, 4, nil, t)
	RunInstrAndAssertTimings(0xB6, 8, nil, t)
	RunInstrAndAssertTimings(0xB7, 4, nil, t)
	RunInstrAndAssertTimings(0xB8, 4, nil, t)
	RunInstrAndAssertTimings(0xB9, 4, nil, t)
	RunInstrAndAssertTimings(0xBA, 4, nil, t)
	RunInstrAndAssertTimings(0xBB, 4, nil, t)
	RunInstrAndAssertTimings(0xBC, 4, nil, t)
	RunInstrAndAssertTimings(0xBD, 4, nil, t)
	RunInstrAndAssertTimings(0xBE, 8, nil, t)
	RunInstrAndAssertTimings(0xBF, 4, nil, t)

	//0xCx
	RunInstrAndAssertTimings(0xC0, 20, nil, t)
	RunInstrAndAssertTimings(0xC0, 8, []int{Z}, t)
	RunInstrAndAssertTimings(0xC1, 12, nil, t)
	RunInstrAndAssertTimings(0xC2, 16, nil, t)
	RunInstrAndAssertTimings(0xC2, 12, []int{Z}, t)
	RunInstrAndAssertTimings(0xC3, 16, nil, t)
	RunInstrAndAssertTimings(0xC4, 24, nil, t)
	RunInstrAndAssertTimings(0xC4, 12, []int{Z}, t)
	RunInstrAndAssertTimings(0xC5, 16, nil, t)
	RunInstrAndAssertTimings(0xC6, 8, nil, t)
	RunInstrAndAssertTimings(0xC7, 16, nil, t)
	RunInstrAndAssertTimings(0xC8, 20, []int{Z}, t)
	RunInstrAndAssertTimings(0xC8, 8, nil, t)
	RunInstrAndAssertTimings(0xC9, 16, nil, t)
	RunInstrAndAssertTimings(0xCA, 16, []int{Z}, t)
	RunInstrAndAssertTimings(0xCA, 12, nil, t)
	RunInstrAndAssertTimings(0xCC, 24, []int{Z}, t)
	RunInstrAndAssertTimings(0xCC, 12, nil, t)
	RunInstrAndAssertTimings(0xCD, 24, nil, t)
	RunInstrAndAssertTimings(0xCE, 8, nil, t)
	RunInstrAndAssertTimings(0xCF, 16, nil, t)

	//0xDx
	RunInstrAndAssertTimings(0xD0, 20, nil, t)
	RunInstrAndAssertTimings(0xD0, 8, []int{C}, t)
	RunInstrAndAssertTimings(0xD1, 12, nil, t)
	RunInstrAndAssertTimings(0xD2, 16, nil, t)
	RunInstrAndAssertTimings(0xD2, 12, []int{C}, t)
	RunInstrAndAssertTimings(0xD4, 24, nil, t)
	RunInstrAndAssertTimings(0xD4, 12, []int{C}, t)
	RunInstrAndAssertTimings(0xD5, 16, nil, t)
	RunInstrAndAssertTimings(0xD6, 8, nil, t)
	RunInstrAndAssertTimings(0xD7, 16, nil, t)
	RunInstrAndAssertTimings(0xD8, 20, []int{C}, t)
	RunInstrAndAssertTimings(0xD8, 8, nil, t)
	RunInstrAndAssertTimings(0xD9, 16, nil, t)
	RunInstrAndAssertTimings(0xDA, 16, []int{C}, t)
	RunInstrAndAssertTimings(0xDA, 12, nil, t)
	RunInstrAndAssertTimings(0xDC, 24, []int{C}, t)
	RunInstrAndAssertTimings(0xDC, 12, nil, t)
	RunInstrAndAssertTimings(0xDE, 8, nil, t)
	RunInstrAndAssertTimings(0xDF, 16, nil, t)

	//0xEx
	RunInstrAndAssertTimings(0xE0, 12, nil, t)
	RunInstrAndAssertTimings(0xE1, 12, nil, t)
	RunInstrAndAssertTimings(0xE2, 8, nil, t)
	RunInstrAndAssertTimings(0xE5, 16, nil, t)
	RunInstrAndAssertTimings(0xE6, 8, nil, t)
	RunInstrAndAssertTimings(0xE7, 16, nil, t)
	RunInstrAndAssertTimings(0xE8, 16, nil, t)
	RunInstrAndAssertTimings(0xE9, 4, nil, t)
	RunInstrAndAssertTimings(0xEA, 16, nil, t)
	RunInstrAndAssertTimings(0xEE, 8, nil, t)
	RunInstrAndAssertTimings(0xEF, 16, nil, t)

	//0xFx
	RunInstrAndAssertTimings(0xF0, 12, nil, t)
	RunInstrAndAssertTimings(0xF1, 12, nil, t)
	RunInstrAndAssertTimings(0xF2, 8, nil, t)
	RunInstrAndAssertTimings(0xF3, 4, nil, t)
	RunInstrAndAssertTimings(0xF5, 16, nil, t)
	RunInstrAndAssertTimings(0xF6, 8, nil, t)
	RunInstrAndAssertTimings(0xF7, 16, nil, t)
	RunInstrAndAssertTimings(0xF8, 12, nil, t)
	RunInstrAndAssertTimings(0xF9, 8, nil, t)
	RunInstrAndAssertTimings(0xFA, 16, nil, t)
	RunInstrAndAssertTimings(0xFB, 4, nil, t)
	RunInstrAndAssertTimings(0xFE, 8, nil, t)
	RunInstrAndAssertTimings(0xFF, 16, nil, t)

	//0xCB 0xXX
	RunCBInstrAndAssertTimings(0x0, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6, 16, nil, t)
	RunCBInstrAndAssertTimings(0x7, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xF, 8, nil, t)
	RunCBInstrAndAssertTimings(0x10, 8, nil, t)
	RunCBInstrAndAssertTimings(0x11, 8, nil, t)
	RunCBInstrAndAssertTimings(0x12, 8, nil, t)
	RunCBInstrAndAssertTimings(0x13, 8, nil, t)
	RunCBInstrAndAssertTimings(0x14, 8, nil, t)
	RunCBInstrAndAssertTimings(0x15, 8, nil, t)
	RunCBInstrAndAssertTimings(0x16, 16, nil, t)
	RunCBInstrAndAssertTimings(0x17, 8, nil, t)
	RunCBInstrAndAssertTimings(0x18, 8, nil, t)
	RunCBInstrAndAssertTimings(0x19, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x1E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x1F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x20, 8, nil, t)
	RunCBInstrAndAssertTimings(0x21, 8, nil, t)
	RunCBInstrAndAssertTimings(0x22, 8, nil, t)
	RunCBInstrAndAssertTimings(0x23, 8, nil, t)
	RunCBInstrAndAssertTimings(0x24, 8, nil, t)
	RunCBInstrAndAssertTimings(0x25, 8, nil, t)
	RunCBInstrAndAssertTimings(0x26, 16, nil, t)
	RunCBInstrAndAssertTimings(0x27, 8, nil, t)
	RunCBInstrAndAssertTimings(0x28, 8, nil, t)
	RunCBInstrAndAssertTimings(0x29, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x2E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x2F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x30, 8, nil, t)
	RunCBInstrAndAssertTimings(0x31, 8, nil, t)
	RunCBInstrAndAssertTimings(0x32, 8, nil, t)
	RunCBInstrAndAssertTimings(0x33, 8, nil, t)
	RunCBInstrAndAssertTimings(0x34, 8, nil, t)
	RunCBInstrAndAssertTimings(0x35, 8, nil, t)
	RunCBInstrAndAssertTimings(0x36, 16, nil, t)
	RunCBInstrAndAssertTimings(0x37, 8, nil, t)
	RunCBInstrAndAssertTimings(0x38, 8, nil, t)
	RunCBInstrAndAssertTimings(0x39, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x3E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x3F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x40, 8, nil, t)
	RunCBInstrAndAssertTimings(0x41, 8, nil, t)
	RunCBInstrAndAssertTimings(0x42, 8, nil, t)
	RunCBInstrAndAssertTimings(0x43, 8, nil, t)
	RunCBInstrAndAssertTimings(0x44, 8, nil, t)
	RunCBInstrAndAssertTimings(0x45, 8, nil, t)
	RunCBInstrAndAssertTimings(0x46, 16, nil, t)
	RunCBInstrAndAssertTimings(0x47, 8, nil, t)
	RunCBInstrAndAssertTimings(0x48, 8, nil, t)
	RunCBInstrAndAssertTimings(0x49, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x4E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x4F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x50, 8, nil, t)
	RunCBInstrAndAssertTimings(0x51, 8, nil, t)
	RunCBInstrAndAssertTimings(0x52, 8, nil, t)
	RunCBInstrAndAssertTimings(0x53, 8, nil, t)
	RunCBInstrAndAssertTimings(0x54, 8, nil, t)
	RunCBInstrAndAssertTimings(0x55, 8, nil, t)
	RunCBInstrAndAssertTimings(0x56, 16, nil, t)
	RunCBInstrAndAssertTimings(0x57, 8, nil, t)
	RunCBInstrAndAssertTimings(0x58, 8, nil, t)
	RunCBInstrAndAssertTimings(0x59, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x5E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x5F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x60, 8, nil, t)
	RunCBInstrAndAssertTimings(0x61, 8, nil, t)
	RunCBInstrAndAssertTimings(0x62, 8, nil, t)
	RunCBInstrAndAssertTimings(0x63, 8, nil, t)
	RunCBInstrAndAssertTimings(0x64, 8, nil, t)
	RunCBInstrAndAssertTimings(0x65, 8, nil, t)
	RunCBInstrAndAssertTimings(0x66, 16, nil, t)
	RunCBInstrAndAssertTimings(0x67, 8, nil, t)
	RunCBInstrAndAssertTimings(0x68, 8, nil, t)
	RunCBInstrAndAssertTimings(0x69, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x6E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x6F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x70, 8, nil, t)
	RunCBInstrAndAssertTimings(0x71, 8, nil, t)
	RunCBInstrAndAssertTimings(0x72, 8, nil, t)
	RunCBInstrAndAssertTimings(0x73, 8, nil, t)
	RunCBInstrAndAssertTimings(0x74, 8, nil, t)
	RunCBInstrAndAssertTimings(0x75, 8, nil, t)
	RunCBInstrAndAssertTimings(0x76, 16, nil, t)
	RunCBInstrAndAssertTimings(0x77, 8, nil, t)
	RunCBInstrAndAssertTimings(0x78, 8, nil, t)
	RunCBInstrAndAssertTimings(0x79, 8, nil, t)
	RunCBInstrAndAssertTimings(0x7A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x7B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x7C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x7D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x7E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x7F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x80, 8, nil, t)
	RunCBInstrAndAssertTimings(0x81, 8, nil, t)
	RunCBInstrAndAssertTimings(0x82, 8, nil, t)
	RunCBInstrAndAssertTimings(0x83, 8, nil, t)
	RunCBInstrAndAssertTimings(0x84, 8, nil, t)
	RunCBInstrAndAssertTimings(0x85, 8, nil, t)
	RunCBInstrAndAssertTimings(0x86, 16, nil, t)
	RunCBInstrAndAssertTimings(0x87, 8, nil, t)
	RunCBInstrAndAssertTimings(0x88, 8, nil, t)
	RunCBInstrAndAssertTimings(0x89, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x8E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x8F, 8, nil, t)
	RunCBInstrAndAssertTimings(0x90, 8, nil, t)
	RunCBInstrAndAssertTimings(0x91, 8, nil, t)
	RunCBInstrAndAssertTimings(0x92, 8, nil, t)
	RunCBInstrAndAssertTimings(0x93, 8, nil, t)
	RunCBInstrAndAssertTimings(0x94, 8, nil, t)
	RunCBInstrAndAssertTimings(0x95, 8, nil, t)
	RunCBInstrAndAssertTimings(0x96, 16, nil, t)
	RunCBInstrAndAssertTimings(0x97, 8, nil, t)
	RunCBInstrAndAssertTimings(0x98, 8, nil, t)
	RunCBInstrAndAssertTimings(0x99, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9A, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9B, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9C, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9D, 8, nil, t)
	RunCBInstrAndAssertTimings(0x9E, 16, nil, t)
	RunCBInstrAndAssertTimings(0x9F, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xA7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xA9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xAA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xAB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xAC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xAD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xAE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xAF, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xB7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xB9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xBA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xBB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xBC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xBD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xBE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xBF, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xC7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xC9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xCA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xCB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xCC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xCD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xCE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xCF, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xD7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xD9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xDA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xDB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xDC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xDD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xDE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xDF, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xE7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xE9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xEA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xEB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xEC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xED, 8, nil, t)
	RunCBInstrAndAssertTimings(0xEE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xEF, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF0, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF1, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF2, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF3, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF4, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF5, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF6, 16, nil, t)
	RunCBInstrAndAssertTimings(0xF7, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF8, 8, nil, t)
	RunCBInstrAndAssertTimings(0xF9, 8, nil, t)
	RunCBInstrAndAssertTimings(0xFA, 8, nil, t)
	RunCBInstrAndAssertTimings(0xFB, 8, nil, t)
	RunCBInstrAndAssertTimings(0xFC, 8, nil, t)
	RunCBInstrAndAssertTimings(0xFD, 8, nil, t)
	RunCBInstrAndAssertTimings(0xFE, 16, nil, t)
	RunCBInstrAndAssertTimings(0xFF, 8, nil, t)
}

type MockMMU struct {
	memory map[types.Word]byte
}

func NewMockMMU() *MockMMU {
	var m *MockMMU = new(MockMMU)
	m.memory = make(map[types.Word]byte)
	return m
}

func (m *MockMMU) WriteByte(address types.Word, value byte) {
	m.memory[address] = value
}

func (m *MockMMU) WriteWord(address types.Word, value types.Word) {
	m.memory[address] = byte(value >> 8)
	m.memory[address+1] = byte(value & 0x00FF)
}

func (m *MockMMU) ReadByte(address types.Word) byte {
	return m.memory[address]
}

func (m *MockMMU) ReadWord(address types.Word) types.Word {
	a, b := m.memory[address], m.memory[address+1]
	return (types.Word(a) << 8) ^ types.Word(b)
}

func (m *MockMMU) SetInBootMode(mode bool) {
}

func (m *MockMMU) Reset() {
	m.memory = make(map[types.Word]byte)
}

func (m *MockMMU) LoadBIOS(data []byte) (bool, error) {
	return true, nil
}

func (m *MockMMU) LoadCartridge(cart *cartridge.Cartridge) {
}
